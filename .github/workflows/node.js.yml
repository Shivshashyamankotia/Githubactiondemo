# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI 
 
on: 
  push:
    branches: [ "main" ]

jobs:
  setup-ssh:
    runs-on: ubuntu-latest
    env:
      EC2_SSH_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
      EC2_URL: ${{ secrets.HOSTNAME }}
      EC2_USERNAME: ${{ secrets.USER_NAME }}
    steps:
    - name: Setup SSH for EC2
      uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
      with:
          EC2_SSH_PRIVATE_KEY: $EC2_SSH_PRIVATE_KEY
          EC2_URL: $EC2_URL
    # then you can run commands/scripts directly on the EC2 instance e.g.:
    - name: Create a new file on the EC2 instance with "hello-world"
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "rm -rf Githubactiondemo || true"
    - name: Git
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "git clone https://github.com/Shivshashyamankotia/Githubactiondemo.git"
    - name: DIR  
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "cd Githubactiondemo"
    - name: rm 
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "rm -rf node_modules || true"    
    - name: install dependencies  
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "sudo apt update"
    - name: nodejs
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "sudo apt install -y nodejs"
    - name: npm
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "sudo apt install -y npm"
    - name: pm2
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "sudo npm install -g pm2" 
    - name: test4
      run: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL "pm2 start npm --name frontend -- start"            
      


